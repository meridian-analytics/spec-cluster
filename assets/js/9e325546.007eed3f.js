"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2902],{4709:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mainSidebar":[{"type":"link","label":"Get Started","href":"/spec-cluster/docs/get-started","docId":"get-started","unlisted":false},{"type":"category","label":"Modules","collapsible":true,"collapsed":false,"items":[{"type":"category","label":"Components","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Spec","href":"/spec-cluster/docs/modules/components/spec","docId":"modules/components/spec","unlisted":false},{"type":"link","label":"Shape","href":"/spec-cluster/docs/modules/components/shape","docId":"modules/components/shape","unlisted":false},{"type":"link","label":"Scene","href":"/spec-cluster/docs/modules/components/scene","docId":"modules/components/scene","unlisted":false},{"type":"link","label":"Interface","href":"/spec-cluster/docs/modules/components/interface","docId":"modules/components/interface","unlisted":false}]},{"type":"category","label":"Contexts","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"User Data","href":"/spec-cluster/docs/modules/contexts/user-data","docId":"modules/contexts/user-data","unlisted":false},{"type":"link","label":"Configurator","href":"/spec-cluster/docs/modules/contexts/configurator","docId":"modules/contexts/configurator","unlisted":false},{"type":"link","label":"Selection","href":"/spec-cluster/docs/modules/contexts/selection","docId":"modules/contexts/selection","unlisted":false},{"type":"link","label":"Focus","href":"/spec-cluster/docs/modules/contexts/focus","docId":"modules/contexts/focus","unlisted":false}]}]},{"type":"category","label":"Examples","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Spec Visualization","href":"/spec-cluster/docs/examples/spec-visualization","docId":"examples/spec-visualization","unlisted":false},{"type":"link","label":"Shape Visualization","href":"/spec-cluster/docs/examples/shape-visualization","docId":"examples/shape-visualization","unlisted":false}]}]},"docs":{"examples/shape-visualization":{"id":"examples/shape-visualization","title":"Shape Visualization","description":"This example demonstrates how spectrogram data can be visualized as interactive shapes, with spheres as the default, in a 3D space using the spec-cluster package. The user can select individual or multiple entities and interact with them through the custom UI components.","sidebar":"mainSidebar"},"examples/spec-visualization":{"id":"examples/spec-visualization","title":"Spec Visualization","description":"This example demonstrates how clustered spectrogram images can be rendered in the 3D space using the spec-cluster package. Users can focus on individual spectrograms, view their details, and interact with them in a 3D scene.","sidebar":"mainSidebar"},"get-started":{"id":"get-started","title":"Get Started","description":"SpecCluster is a react package designed for generating cluster visualizations of spectrograms. Visualizing acoustic samples is essential for understanding complex audio data, enabling users to identify patterns, detect anomalies, and analyze relationships between sound samples. With SpecCluster, you can simply visualize spectrogram data to easily interpret the information and draw meaningful conclusions.","sidebar":"mainSidebar"},"modules/components/interface":{"id":"modules/components/interface","title":"Interface","description":"The Interface component utilizes Material-UI (MUI) to provide a user interface for adjusting scale values along three axes (X, Y, and Z). It integrates with the configurator context to manage the scale states dynamically, allowing users to interactively modify the scaling of visual elements in your application.","sidebar":"mainSidebar"},"modules/components/scene":{"id":"modules/components/scene","title":"Scene","description":"The Scene component renders a 3D visualization of the provided spectrograms, allowing user interaction and selection. It manages the following:","sidebar":"mainSidebar"},"modules/components/shape":{"id":"modules/components/shape","title":"Shape","description":"The Shape component is responsible for rendering individual spectrogram entities as shapes, with spheres as the default, in the 3D space and is utilized by the Scene component. This component allows customization of its position, size, color, shape and click interaction behavior.","sidebar":"mainSidebar"},"modules/components/spec":{"id":"modules/components/spec","title":"Spec","description":"The Spec component is a React component built with @react-three/fiber and @react-three/drei. It renders a 3D plane with a texture loaded from a provided URL and supports interaction through a click event.","sidebar":"mainSidebar"},"modules/contexts/configurator":{"id":"modules/contexts/configurator","title":"Configurator","description":"This module provides a context for adjusting the axes position and rendering mode in a React application. It allows users to dynamically change the rendering mode (image or dot) and scale factors for the X, Y, and Z axes.","sidebar":"mainSidebar"},"modules/contexts/focus":{"id":"modules/contexts/focus","title":"Focus","description":"This module provides a context for managing focus on Spectrogram objects in a React application. It simplifies the process of tracking which item is currently focused, and allows components to easily set or unset focus as needed.","sidebar":"mainSidebar"},"modules/contexts/selection":{"id":"modules/contexts/selection","title":"Selection","description":"This module provides a context for managing the selection of Spectrogram objects in a React application. It enables components to track and manipulate a set of selected Spectrogram items based on their filenames, offering flexibility in handling bulk selections and updates.","sidebar":"mainSidebar"},"modules/contexts/user-data":{"id":"modules/contexts/user-data","title":"User Data","description":"This module provides a context for managing Spectrogram objects in a React application. It includes a context provider and hooks that allow components to efficiently access and update spectrogram data.","sidebar":"mainSidebar"}}}}')}}]);